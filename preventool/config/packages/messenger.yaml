framework:
    messenger:
        # reset services after consuming messages
        reset_on_message: true

        serializer:
            default_serializer: messenger.transport.symfony_serializer
            symfony_serializer:
                format: json
                context: { }

        failure_transport: failed

        # Bus
        default_bus: command.bus
        buses:
            command.bus:
                middleware:
                    - doctrine_transaction
            query.bus: ~
            message.bus: ~
            domain.event.bus:
                default_middleware: allow_no_handlers

        # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.
        # failure_transport: failed

        transports:
            # https://symfony.com/doc/current/messenger.html#transport-configuration
            async:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                options:
                    # queue_name is specific to the doctrine transport
                    queue_name: default
            failed: 'doctrine://default?queue_name=failed'
            sync: 'sync://'

        routing:
            # Route your messages to the transports
            # 'App\Message\YourMessage': async
            'Preventool\Domain\Shared\Bus\Command\Command': sync
            'Preventool\Domain\Shared\Bus\Query\Query': sync
            'Preventool\Domain\Shared\Bus\DomainEvent\DomainEvent': sync
            'Preventool\Domain\Shared\Bus\Message\Message': async

when@test:
    framework:
        messenger:
            transports:
                # replace with your transport name here (e.g., my_transport: 'in-memory://')
                # For more Messenger testing tools, see https://github.com/zenstruck/messenger-test
                async: 'in-memory://'
